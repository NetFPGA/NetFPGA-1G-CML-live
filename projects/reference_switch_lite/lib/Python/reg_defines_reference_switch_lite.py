#!/usr/bin/python

# ******************************************************************
# 
# CAUTION: This file is automatically generated by libgen.
# Version: Xilinx EDK 13.4 EDK_O.87xd
# DO NOT EDIT.
# 
# Copyright (c) 1995-2011 Xilinx, Inc.  All rights reserved.

# 
# Description: Driver parameters
# 
# *****************************************************************/

def STDIN_BASEADDRESS():
    return 0x40600000
def STDOUT_BASEADDRESS():
    return 0x40600000

# *****************************************************************/

#  Definitions for driver UARTLITE */
def XPAR_XUARTLITE_NUM_INSTANCES():
    return 1

#  Definitions for peripheral RS232_UART_1 */
def XPAR_RS232_UART_1_BASEADDR():
    return 0x40600000
def XPAR_RS232_UART_1_HIGHADDR():
    return 0x4060FFFF
def XPAR_RS232_UART_1_DEVICE_ID():
    return 0
def XPAR_RS232_UART_1_BAUDRATE():
    return 9600
def XPAR_RS232_UART_1_USE_PARITY():
    return 0
def XPAR_RS232_UART_1_ODD_PARITY():
    return 1
def XPAR_RS232_UART_1_DATA_BITS():
    return 8


# *****************************************************************/

#  Canonical definitions for peripheral RS232_UART_1 */
def XPAR_UARTLITE_0_DEVICE_ID():
    return XPAR_RS232_UART_1_DEVICE_ID
def XPAR_UARTLITE_0_BASEADDR():
    return 0x40600000
def XPAR_UARTLITE_0_HIGHADDR():
    return 0x4060FFFF
def XPAR_UARTLITE_0_BAUDRATE():
    return 9600
def XPAR_UARTLITE_0_USE_PARITY():
    return 0
def XPAR_UARTLITE_0_ODD_PARITY():
    return 1
def XPAR_UARTLITE_0_DATA_BITS():
    return 8
def XPAR_UARTLITE_0_SIO_CHAN():
    return 0


# *****************************************************************/

#  Definitions for driver GPIO */
def XPAR_XGPIO_NUM_INSTANCES():
    return 1

#  Definitions for peripheral AXI_CFG_FPGA_0 */
def XPAR_AXI_CFG_FPGA_0_BASEADDR():
    return 0x40000000
def XPAR_AXI_CFG_FPGA_0_HIGHADDR():
    return 0x40000FFF
def XPAR_AXI_CFG_FPGA_0_DEVICE_ID():
    return 0
def XPAR_AXI_CFG_FPGA_0_INTERRUPT_PRESENT():
    return 0
def XPAR_AXI_CFG_FPGA_0_IS_DUAL():
    return 0


# *****************************************************************/


#  Definitions for peripheral AXI_EMC_0 */
def XPAR_AXI_EMC_0_NUM_BANKS_MEM():
    return 1


# *****************************************************************/

#  Definitions for peripheral AXI_EMC_0 */
def XPAR_AXI_EMC_0_S_AXI_MEM0_BASEADDR():
    return 0x80000000
def XPAR_AXI_EMC_0_S_AXI_MEM0_HIGHADDR():
    return 0x83FFFFFF

# *****************************************************************/

#  Canonical definitions for peripheral AXI_EMC_0 */
def XPAR_EMC_0_NUM_BANKS_MEM():
    return 1
def XPAR_EMC_0_S_AXI_MEM0_BASEADDR():
    return 0x80000000
def XPAR_EMC_0_S_AXI_MEM0_HIGHADDR():
    return 0x83FFFFFF
#define XPAR_AXI_EMC


# *****************************************************************/

#  Definitions for driver WDTTB */
def XPAR_XWDTTB_NUM_INSTANCES():
    return 1

#  Definitions for peripheral AXI_TIMEBASE_WDT_0 */
def XPAR_AXI_TIMEBASE_WDT_0_DEVICE_ID():
    return 0
def XPAR_AXI_TIMEBASE_WDT_0_BASEADDR():
    return 0x41A00000
def XPAR_AXI_TIMEBASE_WDT_0_HIGHADDR():
    return 0x41A0FFFF


# *****************************************************************/

#  Canonical definitions for peripheral AXI_TIMEBASE_WDT_0 */
def XPAR_WDTTB_0_DEVICE_ID():
    return XPAR_AXI_TIMEBASE_WDT_0_DEVICE_ID
def XPAR_WDTTB_0_BASEADDR():
    return 0x41A00000
def XPAR_WDTTB_0_HIGHADDR():
    return 0x41A0FFFF


# *****************************************************************/


#  Definitions for peripheral DMA_0 */
def XPAR_DMA_0_BASEADDR():
    return 0x7D400000
def XPAR_DMA_0_HIGHADDR():
    return 0x7D40FFFF


#  Definitions for peripheral NF10_IDENTIFIER_0 */
def XPAR_NF10_IDENTIFIER_0_BASEADDR():
    return 0x6A000000
def XPAR_NF10_IDENTIFIER_0_HIGHADDR():
    return 0x6A00FFFF


# *****************************************************************/

#  Definitions for driver BRAM */
def XPAR_XBRAM_NUM_INSTANCES():
    return 2

#  Definitions for peripheral MICROBLAZE_0_D_BRAM_CTRL */
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_DEVICE_ID():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_ECC():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_FAULT_INJECT():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_CE_FAILING_REGISTERS():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_UE_FAILING_REGISTERS():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_ECC_STATUS_REGISTERS():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_CE_COUNTER_WIDTH():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_ECC_ONOFF_REGISTER():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_ECC_ONOFF_RESET_VALUE():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_WRITE_ACCESS():
    return 0
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_BASEADDR():
    return 0x00000000
def XPAR_MICROBLAZE_0_D_BRAM_CTRL_HIGHADDR():
    return 0x00003FFF


#  Definitions for peripheral MICROBLAZE_0_I_BRAM_CTRL */
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_DEVICE_ID():
    return 1
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_ECC():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_FAULT_INJECT():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_CE_FAILING_REGISTERS():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_UE_FAILING_REGISTERS():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_ECC_STATUS_REGISTERS():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_CE_COUNTER_WIDTH():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_ECC_ONOFF_REGISTER():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_ECC_ONOFF_RESET_VALUE():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_WRITE_ACCESS():
    return 0
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_BASEADDR():
    return 0x00000000
def XPAR_MICROBLAZE_0_I_BRAM_CTRL_HIGHADDR():
    return 0x00003FFF


# *****************************************************************/

#  Canonical definitions for peripheral MICROBLAZE_0_D_BRAM_CTRL */
def XPAR_BRAM_0_DEVICE_ID():
    return XPAR_MICROBLAZE_0_D_BRAM_CTRL_DEVICE_ID
def XPAR_BRAM_0_DATA_WIDTH():
    return 32
def XPAR_BRAM_0_ECC():
    return 0
def XPAR_BRAM_0_FAULT_INJECT():
    return 0
def XPAR_BRAM_0_CE_FAILING_REGISTERS():
    return 0
def XPAR_BRAM_0_UE_FAILING_REGISTERS():
    return 0
def XPAR_BRAM_0_ECC_STATUS_REGISTERS():
    return 0
def XPAR_BRAM_0_CE_COUNTER_WIDTH():
    return 0
def XPAR_BRAM_0_ECC_ONOFF_REGISTER():
    return 0
def XPAR_BRAM_0_ECC_ONOFF_RESET_VALUE():
    return 0
def XPAR_BRAM_0_WRITE_ACCESS():
    return 0
def XPAR_BRAM_0_BASEADDR():
    return 0x00000000
def XPAR_BRAM_0_HIGHADDR():
    return 0x00003FFF

#  Canonical definitions for peripheral MICROBLAZE_0_I_BRAM_CTRL */
def XPAR_BRAM_1_DEVICE_ID():
    return XPAR_MICROBLAZE_0_I_BRAM_CTRL_DEVICE_ID
def XPAR_BRAM_1_DATA_WIDTH():
    return 32
def XPAR_BRAM_1_ECC():
    return 0
def XPAR_BRAM_1_FAULT_INJECT():
    return 0
def XPAR_BRAM_1_CE_FAILING_REGISTERS():
    return 0
def XPAR_BRAM_1_UE_FAILING_REGISTERS():
    return 0
def XPAR_BRAM_1_ECC_STATUS_REGISTERS():
    return 0
def XPAR_BRAM_1_CE_COUNTER_WIDTH():
    return 0
def XPAR_BRAM_1_ECC_ONOFF_REGISTER():
    return 0
def XPAR_BRAM_1_ECC_ONOFF_RESET_VALUE():
    return 0
def XPAR_BRAM_1_WRITE_ACCESS():
    return 0
def XPAR_BRAM_1_BASEADDR():
    return 0x00000000
def XPAR_BRAM_1_HIGHADDR():
    return 0x00003FFF


# *****************************************************************/


#  Definitions for peripheral NF10_10G_INTERFACE_0 */
def XPAR_NF10_10G_INTERFACE_0_BASEADDR():
    return 0x77A80000
def XPAR_NF10_10G_INTERFACE_0_HIGHADDR():
    return 0x77A8FFFF
def XPAR_NF10_10G_INTERFACE_0_RESET_CNTRS():
    return 0x77a80000
def XPAR_NF10_10G_INTERFACE_0_BAD_FRAMES_COUNTER():
    return 0x77a80004
def XPAR_NF10_10G_INTERFACE_0_GOOD_FRAMES_COUNTER():
    return 0x77a80008
def XPAR_NF10_10G_INTERFACE_0_BYTES_FROM_MAC():
    return 0x77a8000c
def XPAR_NF10_10G_INTERFACE_0_RX_ENQUEUED_PKTS():
    return 0x77a80010
def XPAR_NF10_10G_INTERFACE_0_RX_ENQUEUED_BYTES():
    return 0x77a80014
def XPAR_NF10_10G_INTERFACE_0_RX_DEQUEUED_PKTS():
    return 0x77a80018
def XPAR_NF10_10G_INTERFACE_0_RX_DEQUEUED_BYTES():
    return 0x77a8001c
def XPAR_NF10_10G_INTERFACE_0_TX_ENQUEUED_PKTS():
    return 0x77a80020
def XPAR_NF10_10G_INTERFACE_0_TX_ENQUEUED_BYTES():
    return 0x77a80024
def XPAR_NF10_10G_INTERFACE_0_TX_DEQUEUED_PKTS():
    return 0x77a80028
def XPAR_NF10_10G_INTERFACE_0_TX_DEQUEUED_BYTES():
    return 0x77a8002c
def XPAR_NF10_10G_INTERFACE_0_RX_PKTS_IN_QUEUE():
    return 0x77a80030
def XPAR_NF10_10G_INTERFACE_0_RX_BYTES_IN_QUEUE():
    return 0x77a80034
def XPAR_NF10_10G_INTERFACE_0_TX_PKTS_IN_QUEUE():
    return 0x77a80038
def XPAR_NF10_10G_INTERFACE_0_TX_BYTES_IN_QUEUE():
    return 0x77a8003c
def XPAR_NF10_10G_INTERFACE_0_RX_PKTS_DROPPED():
    return 0x77a80040
def XPAR_NF10_10G_INTERFACE_0_RX_BYTES_DROPPED():
    return 0x77a80044


#  Definitions for peripheral NF10_10G_INTERFACE_1 */
def XPAR_NF10_10G_INTERFACE_1_BASEADDR():
    return 0x77A60000
def XPAR_NF10_10G_INTERFACE_1_HIGHADDR():
    return 0x77A6FFFF
def XPAR_NF10_10G_INTERFACE_1_RESET_CNTRS():
    return 0x77a60000
def XPAR_NF10_10G_INTERFACE_1_BAD_FRAMES_COUNTER():
    return 0x77a60004
def XPAR_NF10_10G_INTERFACE_1_GOOD_FRAMES_COUNTER():
    return 0x77a60008
def XPAR_NF10_10G_INTERFACE_1_BYTES_FROM_MAC():
    return 0x77a6000c
def XPAR_NF10_10G_INTERFACE_1_RX_ENQUEUED_PKTS():
    return 0x77a60010
def XPAR_NF10_10G_INTERFACE_1_RX_ENQUEUED_BYTES():
    return 0x77a60014
def XPAR_NF10_10G_INTERFACE_1_RX_DEQUEUED_PKTS():
    return 0x77a60018
def XPAR_NF10_10G_INTERFACE_1_RX_DEQUEUED_BYTES():
    return 0x77a6001c
def XPAR_NF10_10G_INTERFACE_1_TX_ENQUEUED_PKTS():
    return 0x77a60020
def XPAR_NF10_10G_INTERFACE_1_TX_ENQUEUED_BYTES():
    return 0x77a60024
def XPAR_NF10_10G_INTERFACE_1_TX_DEQUEUED_PKTS():
    return 0x77a60028
def XPAR_NF10_10G_INTERFACE_1_TX_DEQUEUED_BYTES():
    return 0x77a6002c
def XPAR_NF10_10G_INTERFACE_1_RX_PKTS_IN_QUEUE():
    return 0x77a60030
def XPAR_NF10_10G_INTERFACE_1_RX_BYTES_IN_QUEUE():
    return 0x77a60034
def XPAR_NF10_10G_INTERFACE_1_TX_PKTS_IN_QUEUE():
    return 0x77a60038
def XPAR_NF10_10G_INTERFACE_1_TX_BYTES_IN_QUEUE():
    return 0x77a6003c
def XPAR_NF10_10G_INTERFACE_1_RX_PKTS_DROPPED():
    return 0x77a60040
def XPAR_NF10_10G_INTERFACE_1_RX_BYTES_DROPPED():
    return 0x77a60044


#  Definitions for peripheral NF10_10G_INTERFACE_2 */
def XPAR_NF10_10G_INTERFACE_2_BASEADDR():
    return 0x77A40000
def XPAR_NF10_10G_INTERFACE_2_HIGHADDR():
    return 0x77A4FFFF
def XPAR_NF10_10G_INTERFACE_2_RESET_CNTRS():
    return 0x77a40000
def XPAR_NF10_10G_INTERFACE_2_BAD_FRAMES_COUNTER():
    return 0x77a40004
def XPAR_NF10_10G_INTERFACE_2_GOOD_FRAMES_COUNTER():
    return 0x77a40008
def XPAR_NF10_10G_INTERFACE_2_BYTES_FROM_MAC():
    return 0x77a4000c
def XPAR_NF10_10G_INTERFACE_2_RX_ENQUEUED_PKTS():
    return 0x77a40010
def XPAR_NF10_10G_INTERFACE_2_RX_ENQUEUED_BYTES():
    return 0x77a40014
def XPAR_NF10_10G_INTERFACE_2_RX_DEQUEUED_PKTS():
    return 0x77a40018
def XPAR_NF10_10G_INTERFACE_2_RX_DEQUEUED_BYTES():
    return 0x77a4001c
def XPAR_NF10_10G_INTERFACE_2_TX_ENQUEUED_PKTS():
    return 0x77a40020
def XPAR_NF10_10G_INTERFACE_2_TX_ENQUEUED_BYTES():
    return 0x77a40024
def XPAR_NF10_10G_INTERFACE_2_TX_DEQUEUED_PKTS():
    return 0x77a40028
def XPAR_NF10_10G_INTERFACE_2_TX_DEQUEUED_BYTES():
    return 0x77a4002c
def XPAR_NF10_10G_INTERFACE_2_RX_PKTS_IN_QUEUE():
    return 0x77a40030
def XPAR_NF10_10G_INTERFACE_2_RX_BYTES_IN_QUEUE():
    return 0x77a40034
def XPAR_NF10_10G_INTERFACE_2_TX_PKTS_IN_QUEUE():
    return 0x77a40038
def XPAR_NF10_10G_INTERFACE_2_TX_BYTES_IN_QUEUE():
    return 0x77a4003c
def XPAR_NF10_10G_INTERFACE_2_RX_PKTS_DROPPED():
    return 0x77a40040
def XPAR_NF10_10G_INTERFACE_2_RX_BYTES_DROPPED():
    return 0x77a40044


#  Definitions for peripheral NF10_10G_INTERFACE_3 */
def XPAR_NF10_10G_INTERFACE_3_BASEADDR():
    return 0x77A20000
def XPAR_NF10_10G_INTERFACE_3_HIGHADDR():
    return 0x77A2FFFF
def XPAR_NF10_10G_INTERFACE_3_RESET_CNTRS():
    return 0x77a20000
def XPAR_NF10_10G_INTERFACE_3_BAD_FRAMES_COUNTER():
    return 0x77a20004
def XPAR_NF10_10G_INTERFACE_3_GOOD_FRAMES_COUNTER():
    return 0x77a20008
def XPAR_NF10_10G_INTERFACE_3_BYTES_FROM_MAC():
    return 0x77a2000c
def XPAR_NF10_10G_INTERFACE_3_RX_ENQUEUED_PKTS():
    return 0x77a20010
def XPAR_NF10_10G_INTERFACE_3_RX_ENQUEUED_BYTES():
    return 0x77a20014
def XPAR_NF10_10G_INTERFACE_3_RX_DEQUEUED_PKTS():
    return 0x77a20018
def XPAR_NF10_10G_INTERFACE_3_RX_DEQUEUED_BYTES():
    return 0x77a2001c
def XPAR_NF10_10G_INTERFACE_3_TX_ENQUEUED_PKTS():
    return 0x77a20020
def XPAR_NF10_10G_INTERFACE_3_TX_ENQUEUED_BYTES():
    return 0x77a20024
def XPAR_NF10_10G_INTERFACE_3_TX_DEQUEUED_PKTS():
    return 0x77a20028
def XPAR_NF10_10G_INTERFACE_3_TX_DEQUEUED_BYTES():
    return 0x77a2002c
def XPAR_NF10_10G_INTERFACE_3_RX_PKTS_IN_QUEUE():
    return 0x77a20030
def XPAR_NF10_10G_INTERFACE_3_RX_BYTES_IN_QUEUE():
    return 0x77a20034
def XPAR_NF10_10G_INTERFACE_3_TX_PKTS_IN_QUEUE():
    return 0x77a20038
def XPAR_NF10_10G_INTERFACE_3_TX_BYTES_IN_QUEUE():
    return 0x77a2003c
def XPAR_NF10_10G_INTERFACE_3_RX_PKTS_DROPPED():
    return 0x77a20040
def XPAR_NF10_10G_INTERFACE_3_RX_BYTES_DROPPED():
    return 0x77a20044


# *****************************************************************/


#  Definitions for peripheral NF10_BRAM_OUTPUT_QUEUES_0 */
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BASEADDR():
    return 0x76600000
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_HIGHADDR():
    return 0x7660FFFF
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_RESET_CNTRS():
    return 0x76600000
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_STORED_PORT_0():
    return 0x76600004
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_STORED_PORT_0():
    return 0x76600008
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_REMOVED_PORT_0():
    return 0x7660000c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_REMOVED_PORT_0():
    return 0x76600010
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_DROPPED_PORT_0():
    return 0x76600014
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_DROPPED_PORT_0():
    return 0x76600018
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_IN_QUEUE_PORT_0():
    return 0x7660001c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_IN_QUEUE_PORT_0():
    return 0x76600020
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_STORED_PORT_1():
    return 0x76600024
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_STORED_PORT_1():
    return 0x76600028
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_REMOVED_PORT_1():
    return 0x7660002c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_REMOVED_PORT_1():
    return 0x76600030
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_DROPPED_PORT_1():
    return 0x76600034
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_DROPPED_PORT_1():
    return 0x76600038
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_IN_QUEUE_PORT_1():
    return 0x7660003c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_IN_QUEUE_PORT_1():
    return 0x76600040
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_STORED_PORT_2():
    return 0x76600044
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_STORED_PORT_2():
    return 0x76600048
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_REMOVED_PORT_2():
    return 0x7660004c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_REMOVED_PORT_2():
    return 0x76600050
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_DROPPED_PORT_2():
    return 0x76600054
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_DROPPED_PORT_2():
    return 0x76600058
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_IN_QUEUE_PORT_2():
    return 0x7660005c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_IN_QUEUE_PORT_2():
    return 0x76600060
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_STORED_PORT_3():
    return 0x76600064
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_STORED_PORT_3():
    return 0x76600068
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_REMOVED_PORT_3():
    return 0x7660006c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_REMOVED_PORT_3():
    return 0x76600070
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_DROPPED_PORT_3():
    return 0x76600074
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_DROPPED_PORT_3():
    return 0x76600078
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_IN_QUEUE_PORT_3():
    return 0x7660007c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_IN_QUEUE_PORT_3():
    return 0x76600080
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_STORED_PORT_4():
    return 0x76600084
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_STORED_PORT_4():
    return 0x76600088
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_REMOVED_PORT_4():
    return 0x7660008c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_REMOVED_PORT_4():
    return 0x76600090
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_DROPPED_PORT_4():
    return 0x76600094
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_DROPPED_PORT_4():
    return 0x76600098
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_PKT_IN_QUEUE_PORT_4():
    return 0x7660009c
def XPAR_NF10_BRAM_OUTPUT_QUEUES_0_BYTES_IN_QUEUE_PORT_4():
    return 0x76600100


# *****************************************************************/


#  Definitions for peripheral NF10_INPUT_ARBITER_0 */
def XPAR_NF10_INPUT_ARBITER_0_BASEADDR():
    return 0x77A00000
def XPAR_NF10_INPUT_ARBITER_0_HIGHADDR():
    return 0x77A0FFFF
def XPAR_NF10_INPUT_ARBITER_0_RESET_CNTRS():
    return 0x77a00000
def XPAR_NF10_INPUT_ARBITER_0_NUM_PKTS_PROCESSED():
    return 0x77a00004


# *****************************************************************/

#  Definitions for driver NF10_MDIO */
def XPAR_XEMACLITE_NUM_INSTANCES():
    return 1

#  Definitions for peripheral NF10_MDIO_0 */
def XPAR_NF10_MDIO_0_DEVICE_ID():
    return 0
def XPAR_NF10_MDIO_0_BASEADDR():
    return 0x7A000000
def XPAR_NF10_MDIO_0_HIGHADDR():
    return 0x7A00FFFF
def XPAR_NF10_MDIO_0_TX_PING_PONG():
    return 0
def XPAR_NF10_MDIO_0_RX_PING_PONG():
    return 0
def XPAR_NF10_MDIO_0_INCLUDE_MDIO():
    return 1
def XPAR_NF10_MDIO_0_INCLUDE_INTERNAL_LOOPBACK():
    return 0


# *****************************************************************/

#  Canonical definitions for peripheral NF10_MDIO_0 */
def XPAR_EMACLITE_0_DEVICE_ID():
    return XPAR_NF10_MDIO_0_DEVICE_ID
def XPAR_EMACLITE_0_BASEADDR():
    return 0x7A000000
def XPAR_EMACLITE_0_HIGHADDR():
    return 0x7A00FFFF
def XPAR_EMACLITE_0_TX_PING_PONG():
    return 0
def XPAR_EMACLITE_0_RX_PING_PONG():
    return 0
def XPAR_EMACLITE_0_INCLUDE_MDIO():
    return 1
def XPAR_EMACLITE_0_INCLUDE_INTERNAL_LOOPBACK():
    return 0


# *****************************************************************/


#  Definitions for peripheral NF10_SWITCH_OUTPUT_PORT_LOOKUP_0 */
def XPAR_NF10_SWITCH_OUTPUT_PORT_LOOKUP_0_BASEADDR():
    return 0x74800000
def XPAR_NF10_SWITCH_OUTPUT_PORT_LOOKUP_0_HIGHADDR():
    return 0x7480FFFF
def XPAR_NF10_SWITCH_OUTPUT_PORT_LOOKUP_0_RESET_CNTRS():
    return 0x74800000
def XPAR_NF10_SWITCH_OUTPUT_PORT_LOOKUP_0_LUT_NUM_HITS_REG():
    return 0x74800004
def XPAR_NF10_SWITCH_OUTPUT_PORT_LOOKUP_0_LUT_NUM_MISSES_REG():
    return 0x74800008


# *****************************************************************/

#  Definitions for bus frequencies */
def XPAR_CPU_M_AXI_DP_FREQ_HZ():
    return 100000000
# *****************************************************************/

#  Canonical definitions for bus frequencies */
def XPAR_PROC_BUS_0_FREQ_HZ():
    return 100000000
# *****************************************************************/

def XPAR_CPU_CORE_CLOCK_FREQ_HZ():
    return 100000000
def XPAR_MICROBLAZE_CORE_CLOCK_FREQ_HZ():
    return 100000000

# *****************************************************************/


#  Definitions for peripheral MICROBLAZE_0 */
def XPAR_MICROBLAZE_0_SCO():
    return 0
def XPAR_MICROBLAZE_0_FREQ():
    return 100000000
def XPAR_MICROBLAZE_0_DATA_SIZE():
    return 32
def XPAR_MICROBLAZE_0_DYNAMIC_BUS_SIZING():
    return 1
def XPAR_MICROBLAZE_0_FAULT_TOLERANT():
    return 0
def XPAR_MICROBLAZE_0_ECC_USE_CE_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_ENDIANNESS():
    return 1
def XPAR_MICROBLAZE_0_AREA_OPTIMIZED():
    return 0
def XPAR_MICROBLAZE_0_OPTIMIZATION():
    return 0
def XPAR_MICROBLAZE_0_INTERCONNECT():
    return 2
def XPAR_MICROBLAZE_0_STREAM_INTERCONNECT():
    return 0
def XPAR_MICROBLAZE_0_DPLB_DWIDTH():
    return 32
def XPAR_MICROBLAZE_0_DPLB_NATIVE_DWIDTH():
    return 32
def XPAR_MICROBLAZE_0_DPLB_BURST_EN():
    return 0
def XPAR_MICROBLAZE_0_DPLB_P2P():
    return 0
def XPAR_MICROBLAZE_0_IPLB_DWIDTH():
    return 32
def XPAR_MICROBLAZE_0_IPLB_NATIVE_DWIDTH():
    return 32
def XPAR_MICROBLAZE_0_IPLB_BURST_EN():
    return 0
def XPAR_MICROBLAZE_0_IPLB_P2P():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_DP_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_DP_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_DP_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_DP_SUPPORTS_WRITE():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_DP_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_DP_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_DP_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_DP_PROTOCOL():
    return AXI4LITE
def XPAR_MICROBLAZE_0_M_AXI_DP_EXCLUSIVE_ACCESS():
    return 0
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_DP_READ_ISSUING():
    return 1
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_DP_WRITE_ISSUING():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_IP_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_IP_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_IP_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_IP_SUPPORTS_WRITE():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_IP_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_IP_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_IP_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_IP_PROTOCOL():
    return AXI4LITE
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_IP_READ_ISSUING():
    return 1
def XPAR_MICROBLAZE_0_D_AXI():
    return 1
def XPAR_MICROBLAZE_0_D_PLB():
    return 0
def XPAR_MICROBLAZE_0_D_LMB():
    return 1
def XPAR_MICROBLAZE_0_I_AXI():
    return 0
def XPAR_MICROBLAZE_0_I_PLB():
    return 0
def XPAR_MICROBLAZE_0_I_LMB():
    return 1
def XPAR_MICROBLAZE_0_USE_MSR_INSTR():
    return 1
def XPAR_MICROBLAZE_0_USE_PCMP_INSTR():
    return 1
def XPAR_MICROBLAZE_0_USE_BARREL():
    return 1
def XPAR_MICROBLAZE_0_USE_DIV():
    return 0
def XPAR_MICROBLAZE_0_USE_HW_MUL():
    return 0
def XPAR_MICROBLAZE_0_USE_FPU():
    return 0
def XPAR_MICROBLAZE_0_UNALIGNED_EXCEPTIONS():
    return 0
def XPAR_MICROBLAZE_0_ILL_OPCODE_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_I_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_D_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_IPLB_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_DPLB_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_DIV_ZERO_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_FPU_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_FSL_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_0_PVR():
    return 0
def XPAR_MICROBLAZE_0_PVR_USER1():
    return 0x00
def XPAR_MICROBLAZE_0_PVR_USER2():
    return 0x00000000
def XPAR_MICROBLAZE_0_DEBUG_ENABLED():
    return 0
def XPAR_MICROBLAZE_0_NUMBER_OF_PC_BRK():
    return 1
def XPAR_MICROBLAZE_0_NUMBER_OF_RD_ADDR_BRK():
    return 0
def XPAR_MICROBLAZE_0_NUMBER_OF_WR_ADDR_BRK():
    return 0
def XPAR_MICROBLAZE_0_INTERRUPT_IS_EDGE():
    return 0
def XPAR_MICROBLAZE_0_EDGE_IS_POSITIVE():
    return 1
def XPAR_MICROBLAZE_0_RESET_MSR():
    return 0x00000000
def XPAR_MICROBLAZE_0_OPCODE_0X0_ILLEGAL():
    return 0
def XPAR_MICROBLAZE_0_FSL_LINKS():
    return 0
def XPAR_MICROBLAZE_0_FSL_DATA_SIZE():
    return 32
def XPAR_MICROBLAZE_0_USE_EXTENDED_FSL_INSTR():
    return 0
def XPAR_MICROBLAZE_0_M0_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S0_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M1_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S1_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M2_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S2_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M3_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S3_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M4_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S4_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M5_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S5_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M6_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S6_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M7_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S7_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M8_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S8_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M9_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S9_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M10_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S10_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M11_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S11_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M12_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S12_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M13_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S13_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M14_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S14_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M15_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_S15_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_0_M0_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S0_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M1_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S1_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M2_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S2_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M3_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S3_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M4_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S4_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M5_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S5_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M6_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S6_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M7_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S7_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M8_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S8_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M9_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S9_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M10_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S10_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M11_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S11_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M12_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S12_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M13_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S13_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M14_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S14_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M15_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_S15_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_ICACHE_BASEADDR():
    return 0x00000000
def XPAR_MICROBLAZE_0_ICACHE_HIGHADDR():
    return 0x3FFFFFFF
def XPAR_MICROBLAZE_0_USE_ICACHE():
    return 0
def XPAR_MICROBLAZE_0_ALLOW_ICACHE_WR():
    return 1
def XPAR_MICROBLAZE_0_ADDR_TAG_BITS():
    return 0
def XPAR_MICROBLAZE_0_CACHE_BYTE_SIZE():
    return 8192
def XPAR_MICROBLAZE_0_ICACHE_USE_FSL():
    return 0
def XPAR_MICROBLAZE_0_ICACHE_LINE_LEN():
    return 4
def XPAR_MICROBLAZE_0_ICACHE_ALWAYS_USED():
    return 0
def XPAR_MICROBLAZE_0_ICACHE_INTERFACE():
    return 0
def XPAR_MICROBLAZE_0_ICACHE_VICTIMS():
    return 0
def XPAR_MICROBLAZE_0_ICACHE_STREAMS():
    return 0
def XPAR_MICROBLAZE_0_ICACHE_FORCE_TAG_LUTRAM():
    return 0
def XPAR_MICROBLAZE_0_ICACHE_DATA_WIDTH():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_IC_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_IC_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_IC_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_IC_SUPPORTS_WRITE():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_IC_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_IC_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_IC_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_IC_PROTOCOL():
    return AXI4
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_IC_READ_ISSUING():
    return 2
def XPAR_MICROBLAZE_0_DCACHE_BASEADDR():
    return 0x00000000
def XPAR_MICROBLAZE_0_DCACHE_HIGHADDR():
    return 0x3FFFFFFF
def XPAR_MICROBLAZE_0_USE_DCACHE():
    return 0
def XPAR_MICROBLAZE_0_ALLOW_DCACHE_WR():
    return 1
def XPAR_MICROBLAZE_0_DCACHE_ADDR_TAG():
    return 0
def XPAR_MICROBLAZE_0_DCACHE_BYTE_SIZE():
    return 8192
def XPAR_MICROBLAZE_0_DCACHE_USE_FSL():
    return 0
def XPAR_MICROBLAZE_0_DCACHE_LINE_LEN():
    return 4
def XPAR_MICROBLAZE_0_DCACHE_ALWAYS_USED():
    return 0
def XPAR_MICROBLAZE_0_DCACHE_INTERFACE():
    return 0
def XPAR_MICROBLAZE_0_DCACHE_USE_WRITEBACK():
    return 0
def XPAR_MICROBLAZE_0_DCACHE_VICTIMS():
    return 0
def XPAR_MICROBLAZE_0_DCACHE_FORCE_TAG_LUTRAM():
    return 0
def XPAR_MICROBLAZE_0_DCACHE_DATA_WIDTH():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_DC_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_DC_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_DC_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_DC_SUPPORTS_WRITE():
    return 1
def XPAR_MICROBLAZE_0_M_AXI_DC_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_0_M_AXI_DC_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_DC_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_0_M_AXI_DC_PROTOCOL():
    return AXI4
def XPAR_MICROBLAZE_0_M_AXI_DC_EXCLUSIVE_ACCESS():
    return 0
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_DC_READ_ISSUING():
    return 2
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_DC_WRITE_ISSUING():
    return 32
def XPAR_MICROBLAZE_0_USE_MMU():
    return 0
def XPAR_MICROBLAZE_0_MMU_DTLB_SIZE():
    return 4
def XPAR_MICROBLAZE_0_MMU_ITLB_SIZE():
    return 2
def XPAR_MICROBLAZE_0_MMU_TLB_ACCESS():
    return 3
def XPAR_MICROBLAZE_0_MMU_ZONES():
    return 16
def XPAR_MICROBLAZE_0_USE_INTERRUPT():
    return 0
def XPAR_MICROBLAZE_0_USE_EXT_BRK():
    return 0
def XPAR_MICROBLAZE_0_USE_EXT_NM_BRK():
    return 0
def XPAR_MICROBLAZE_0_USE_BRANCH_TARGET_CACHE():
    return 0
def XPAR_MICROBLAZE_0_BRANCH_TARGET_CACHE_SIZE():
    return 0
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_DC_AW_REGISTER():
    return 0
def XPAR_MICROBLAZE_0_INTERCONNECT_M_AXI_DC_W_REGISTER():
    return 0

# *****************************************************************/

def XPAR_CPU_ID():
    return 0
def XPAR_MICROBLAZE_ID():
    return 0
def XPAR_MICROBLAZE_SCO():
    return 0
def XPAR_MICROBLAZE_FREQ():
    return 100000000
def XPAR_MICROBLAZE_DATA_SIZE():
    return 32
def XPAR_MICROBLAZE_DYNAMIC_BUS_SIZING():
    return 1
def XPAR_MICROBLAZE_FAULT_TOLERANT():
    return 0
def XPAR_MICROBLAZE_ECC_USE_CE_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_ENDIANNESS():
    return 1
def XPAR_MICROBLAZE_AREA_OPTIMIZED():
    return 0
def XPAR_MICROBLAZE_OPTIMIZATION():
    return 0
def XPAR_MICROBLAZE_INTERCONNECT():
    return 2
def XPAR_MICROBLAZE_STREAM_INTERCONNECT():
    return 0
def XPAR_MICROBLAZE_DPLB_DWIDTH():
    return 32
def XPAR_MICROBLAZE_DPLB_NATIVE_DWIDTH():
    return 32
def XPAR_MICROBLAZE_DPLB_BURST_EN():
    return 0
def XPAR_MICROBLAZE_DPLB_P2P():
    return 0
def XPAR_MICROBLAZE_IPLB_DWIDTH():
    return 32
def XPAR_MICROBLAZE_IPLB_NATIVE_DWIDTH():
    return 32
def XPAR_MICROBLAZE_IPLB_BURST_EN():
    return 0
def XPAR_MICROBLAZE_IPLB_P2P():
    return 0
def XPAR_MICROBLAZE_M_AXI_DP_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_M_AXI_DP_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_M_AXI_DP_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_M_AXI_DP_SUPPORTS_WRITE():
    return 1
def XPAR_MICROBLAZE_M_AXI_DP_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_M_AXI_DP_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_DP_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_DP_PROTOCOL():
    return AXI4LITE
def XPAR_MICROBLAZE_M_AXI_DP_EXCLUSIVE_ACCESS():
    return 0
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_DP_READ_ISSUING():
    return 1
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_DP_WRITE_ISSUING():
    return 1
def XPAR_MICROBLAZE_M_AXI_IP_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_M_AXI_IP_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_M_AXI_IP_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_M_AXI_IP_SUPPORTS_WRITE():
    return 0
def XPAR_MICROBLAZE_M_AXI_IP_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_M_AXI_IP_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_IP_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_IP_PROTOCOL():
    return AXI4LITE
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_IP_READ_ISSUING():
    return 1
def XPAR_MICROBLAZE_D_AXI():
    return 1
def XPAR_MICROBLAZE_D_PLB():
    return 0
def XPAR_MICROBLAZE_D_LMB():
    return 1
def XPAR_MICROBLAZE_I_AXI():
    return 0
def XPAR_MICROBLAZE_I_PLB():
    return 0
def XPAR_MICROBLAZE_I_LMB():
    return 1
def XPAR_MICROBLAZE_USE_MSR_INSTR():
    return 1
def XPAR_MICROBLAZE_USE_PCMP_INSTR():
    return 1
def XPAR_MICROBLAZE_USE_BARREL():
    return 1
def XPAR_MICROBLAZE_USE_DIV():
    return 0
def XPAR_MICROBLAZE_USE_HW_MUL():
    return 0
def XPAR_MICROBLAZE_USE_FPU():
    return 0
def XPAR_MICROBLAZE_UNALIGNED_EXCEPTIONS():
    return 0
def XPAR_MICROBLAZE_ILL_OPCODE_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_M_AXI_I_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_M_AXI_D_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_IPLB_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_DPLB_BUS_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_DIV_ZERO_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_FPU_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_FSL_EXCEPTION():
    return 0
def XPAR_MICROBLAZE_PVR():
    return 0
def XPAR_MICROBLAZE_PVR_USER1():
    return 0x00
def XPAR_MICROBLAZE_PVR_USER2():
    return 0x00000000
def XPAR_MICROBLAZE_DEBUG_ENABLED():
    return 0
def XPAR_MICROBLAZE_NUMBER_OF_PC_BRK():
    return 1
def XPAR_MICROBLAZE_NUMBER_OF_RD_ADDR_BRK():
    return 0
def XPAR_MICROBLAZE_NUMBER_OF_WR_ADDR_BRK():
    return 0
def XPAR_MICROBLAZE_INTERRUPT_IS_EDGE():
    return 0
def XPAR_MICROBLAZE_EDGE_IS_POSITIVE():
    return 1
def XPAR_MICROBLAZE_RESET_MSR():
    return 0x00000000
def XPAR_MICROBLAZE_OPCODE_0X0_ILLEGAL():
    return 0
def XPAR_MICROBLAZE_FSL_LINKS():
    return 0
def XPAR_MICROBLAZE_FSL_DATA_SIZE():
    return 32
def XPAR_MICROBLAZE_USE_EXTENDED_FSL_INSTR():
    return 0
def XPAR_MICROBLAZE_M0_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S0_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M1_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S1_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M2_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S2_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M3_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S3_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M4_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S4_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M5_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S5_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M6_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S6_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M7_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S7_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M8_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S8_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M9_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S9_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M10_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S10_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M11_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S11_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M12_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S12_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M13_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S13_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M14_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S14_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M15_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_S15_AXIS_PROTOCOL():
    return GENERIC
def XPAR_MICROBLAZE_M0_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S0_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M1_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S1_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M2_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S2_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M3_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S3_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M4_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S4_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M5_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S5_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M6_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S6_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M7_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S7_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M8_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S8_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M9_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S9_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M10_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S10_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M11_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S11_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M12_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S12_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M13_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S13_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M14_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S14_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M15_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_S15_AXIS_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_ICACHE_BASEADDR():
    return 0x00000000
def XPAR_MICROBLAZE_ICACHE_HIGHADDR():
    return 0x3FFFFFFF
def XPAR_MICROBLAZE_USE_ICACHE():
    return 0
def XPAR_MICROBLAZE_ALLOW_ICACHE_WR():
    return 1
def XPAR_MICROBLAZE_ADDR_TAG_BITS():
    return 0
def XPAR_MICROBLAZE_CACHE_BYTE_SIZE():
    return 8192
def XPAR_MICROBLAZE_ICACHE_USE_FSL():
    return 0
def XPAR_MICROBLAZE_ICACHE_LINE_LEN():
    return 4
def XPAR_MICROBLAZE_ICACHE_ALWAYS_USED():
    return 0
def XPAR_MICROBLAZE_ICACHE_INTERFACE():
    return 0
def XPAR_MICROBLAZE_ICACHE_VICTIMS():
    return 0
def XPAR_MICROBLAZE_ICACHE_STREAMS():
    return 0
def XPAR_MICROBLAZE_ICACHE_FORCE_TAG_LUTRAM():
    return 0
def XPAR_MICROBLAZE_ICACHE_DATA_WIDTH():
    return 0
def XPAR_MICROBLAZE_M_AXI_IC_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_M_AXI_IC_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_M_AXI_IC_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_M_AXI_IC_SUPPORTS_WRITE():
    return 0
def XPAR_MICROBLAZE_M_AXI_IC_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_M_AXI_IC_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_IC_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_IC_PROTOCOL():
    return AXI4
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_IC_READ_ISSUING():
    return 2
def XPAR_MICROBLAZE_DCACHE_BASEADDR():
    return 0x00000000
def XPAR_MICROBLAZE_DCACHE_HIGHADDR():
    return 0x3FFFFFFF
def XPAR_MICROBLAZE_USE_DCACHE():
    return 0
def XPAR_MICROBLAZE_ALLOW_DCACHE_WR():
    return 1
def XPAR_MICROBLAZE_DCACHE_ADDR_TAG():
    return 0
def XPAR_MICROBLAZE_DCACHE_BYTE_SIZE():
    return 8192
def XPAR_MICROBLAZE_DCACHE_USE_FSL():
    return 0
def XPAR_MICROBLAZE_DCACHE_LINE_LEN():
    return 4
def XPAR_MICROBLAZE_DCACHE_ALWAYS_USED():
    return 0
def XPAR_MICROBLAZE_DCACHE_INTERFACE():
    return 0
def XPAR_MICROBLAZE_DCACHE_USE_WRITEBACK():
    return 0
def XPAR_MICROBLAZE_DCACHE_VICTIMS():
    return 0
def XPAR_MICROBLAZE_DCACHE_FORCE_TAG_LUTRAM():
    return 0
def XPAR_MICROBLAZE_DCACHE_DATA_WIDTH():
    return 0
def XPAR_MICROBLAZE_M_AXI_DC_SUPPORTS_THREADS():
    return 0
def XPAR_MICROBLAZE_M_AXI_DC_THREAD_ID_WIDTH():
    return 1
def XPAR_MICROBLAZE_M_AXI_DC_SUPPORTS_READ():
    return 1
def XPAR_MICROBLAZE_M_AXI_DC_SUPPORTS_WRITE():
    return 1
def XPAR_MICROBLAZE_M_AXI_DC_SUPPORTS_NARROW_BURST():
    return 0
def XPAR_MICROBLAZE_M_AXI_DC_DATA_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_DC_ADDR_WIDTH():
    return 32
def XPAR_MICROBLAZE_M_AXI_DC_PROTOCOL():
    return AXI4
def XPAR_MICROBLAZE_M_AXI_DC_EXCLUSIVE_ACCESS():
    return 0
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_DC_READ_ISSUING():
    return 2
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_DC_WRITE_ISSUING():
    return 32
def XPAR_MICROBLAZE_USE_MMU():
    return 0
def XPAR_MICROBLAZE_MMU_DTLB_SIZE():
    return 4
def XPAR_MICROBLAZE_MMU_ITLB_SIZE():
    return 2
def XPAR_MICROBLAZE_MMU_TLB_ACCESS():
    return 3
def XPAR_MICROBLAZE_MMU_ZONES():
    return 16
def XPAR_MICROBLAZE_USE_INTERRUPT():
    return 0
def XPAR_MICROBLAZE_USE_EXT_BRK():
    return 0
def XPAR_MICROBLAZE_USE_EXT_NM_BRK():
    return 0
def XPAR_MICROBLAZE_USE_BRANCH_TARGET_CACHE():
    return 0
def XPAR_MICROBLAZE_BRANCH_TARGET_CACHE_SIZE():
    return 0
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_DC_AW_REGISTER():
    return 0
def XPAR_MICROBLAZE_INTERCONNECT_M_AXI_DC_W_REGISTER():
    return 0
def XPAR_MICROBLAZE_HW_VER():
    return "8.00.b"

# *****************************************************************/
