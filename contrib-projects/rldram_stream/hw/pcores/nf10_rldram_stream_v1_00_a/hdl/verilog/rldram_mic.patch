diff -u ./cmp_rd_data.v xilinx/cmp_rd_data.v
--- ./cmp_rd_data.v	2008-03-14 16:28:12.000000000 +0000
+++ xilinx/cmp_rd_data.v	2014-01-22 18:14:11.787078471 +0000
@@ -72,9 +72,7 @@
    DISPLAY,
    enable_error_counter,
    
-   PASS_FAIL,
-   
-   cs_io
+   PASS_FAIL
 );
 
    // parameter definitions
@@ -101,8 +99,6 @@
    
    output [2:0] 	 PASS_FAIL;
    
-   inout [1023:0] cs_io;
-   
    reg [2:0] 	 PASS_FAIL_msb1;
    reg [2:0] 	 PASS_FAIL_lsb1;
    reg [2:0] 	 PASS_FAIL;
@@ -130,22 +126,6 @@
 assign	fifo_data_rise[RL_DQ_WIDTH-1:0]=read_data[(2*RL_DQ_WIDTH)-1:RL_DQ_WIDTH];
 assign	fifo_data_fall[RL_DQ_WIDTH-1:0]=read_data[RL_DQ_WIDTH-1:0];
 
-assign cs_io[92:91] = { msb_error, lsb_error };
-assign cs_io[90] = valid_d1;
-assign cs_io[80:72] = {APP_COMPARE_DATA[44:36]};
-assign cs_io[89:81] = {APP_COMPARE_DATA[8:0]};
-
-assign cs_io[8:0] = {fifo_data_rise[8:0]};	//1st byte
-assign cs_io[17:9] = {fifo_data_fall[8:0]};
-
-assign cs_io[26:18] = {fifo_data_rise[17:9]}; //2nd byte
-assign cs_io[35:27] = {fifo_data_fall[17:9]};
-
-assign cs_io[44:36] = {fifo_data_rise[26:18]}; //3rd byte
-assign cs_io[53:45] = {fifo_data_fall[26:18]};
-
-assign cs_io[62:54] = {fifo_data_rise[35:27]}; //4th byte
-assign cs_io[71:63] = {fifo_data_fall[35:27]}; 
 //end of whats for chipscope   
 
 // -----------------------------------------------------------------------------
@@ -293,7 +273,7 @@
 
 always @ (posedge CLK)
   if ( enable_error_counter ) begin
-      $display("ERROR %m: ************* Data Comparison Error *************", $time);
+      //$display("ERROR %m: ************* Data Comparison Error *************", $time);
       //$finish;
   end
 
diff -u ./rld_clk_module.v xilinx/rld_clk_module.v
--- ./rld_clk_module.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_clk_module.v	2014-01-22 18:14:11.647077571 +0000
@@ -61,11 +61,8 @@
 `timescale 1ns/100ps
 
 module  rld_clk_module  (   
-   sysClk_p,   // differential system clock input
-   sysClk_n,
-
-   refClk_p,   // differential reference clock input
-   refClk_n,
+   sysClk_in,   // differential system clock input
+   refClk_in,   // differential reference clock input
    
    clk33,
    sysReset,
@@ -90,10 +87,8 @@
 parameter CAPTURE_METHOD = 2'b00;    // Direct Clocking=2'b00  SerDes=2'b01
 // end of parameter definitions
 
-   input    sysClk_p;
-   input    sysClk_n;
-   input    refClk_p;
-   input    refClk_n;       
+   input    sysClk_in;
+   input    refClk_in;       
    input    sysReset;
    input    clk33;
    
@@ -109,7 +104,6 @@
    wire     clk90_bufg_out;
    wire     refClk;   
    wire     clkfx_bufg_in;
-   wire     clk200;
 
    //added for the Demo
    wire   clkin_ibufg;
@@ -120,18 +114,6 @@
    // -----------------------------------------------------------------------------
    // sysClk differential input buffer 
    // -----------------------------------------------------------------------------
-   IBUFGDS  sysClk0  (
-      .I  ( sysClk_p ),  // differential input pins
-      .IB ( sysClk_n ),
-      .O  ( sysClk )     // system clock, differential clock output
-   );
-
-   IBUFGDS  refClk0  (
-      .I  ( refClk_p ),  // differential input pins
-      .IB ( refClk_n ),
-      .O  ( clk200 )     // reference clock, differential clock output
-   );
-
 // -----------------------------------------------------------------------------
 //slow clock for Demo 
 // -----------------------------------------------------------------------------  
@@ -214,10 +196,12 @@
       .CLKFX180 ( ),
       .LOCKED   ( locked ),
       .CLKFB    ( clk0_bufg_out ),
-      .CLKIN    ( sysClk ), //sysClk   clk0_pll_bufg
+      .CLKIN    ( sysClk_in ), //sysClk   clk0_pll_bufg
       .RST      ( sysReset ) //sysReset      rst_dcm
    );
 
+	assign sysClk = sysClk_in;
+
    BUFG  dcm_clk0   ( .O( clk0_bufg_out ),  .I( clk0_bufg_in ) );
    BUFG  dcm_clk90  ( .O( clk90_bufg_out ), .I( clk90_bufg_in ) );
 
@@ -227,6 +211,6 @@
    // -----------------------------------------------------------------------------
    // One BUFG is absolutely required to drive the IDELAYCTRL blocks 
    // -----------------------------------------------------------------------------
-   BUFG  refClk_buf  ( .O( refClk ), .I( clk200 ) );
+   BUFG  refClk_buf  ( .O( refClk ), .I( refClk_in ) );
 
 endmodule
diff -u ./rld_controller.v xilinx/rld_controller.v
--- ./rld_controller.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_controller.v	2014-01-22 18:14:11.647077571 +0000
@@ -98,10 +98,7 @@
    apConfWr,
    apConfA,
    confMReg,
-   confBL,
-
-   // chipscope debug ports
-   cs_io
+   confBL
 );
 
 // public parameters -- adjustable
@@ -170,9 +167,6 @@
    output [17:0]             confMReg;
    output [3:0]                confBL;
    
-   // chipscope debug ports
-   inout  [1023:0]               cs_io;
-
    // configuration register's content
    wire [17:0]               confMReg;
    wire [3:0]                confRL;
@@ -295,9 +289,7 @@
       .ctlWdfRdEn     ( ctlWdfRdEn ),
       .ctlBankOut     ( ctlBa ),
       .ctlOkEdge      ( ctlOkEdge ),
-      .rldWriteDone   ( rldWriteDone ),
-      
-      .cs_io          ( cs_io )
+      .rldWriteDone   ( rldWriteDone )
 // -- OLD ---------------------------------------------
 //      .apWdfWrEn     ( apWdfWrEn ),
 //      .wdfAlmostFull ( wdfAlmostFull ),
diff -u ./rld_data_path_iobs.v xilinx/rld_data_path_iobs.v
--- ./rld_data_path_iobs.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_data_path_iobs.v	2014-01-22 18:14:11.647077571 +0000
@@ -250,6 +250,8 @@
 
       else if ( DEVICE_ARCH == 2'b01 )  begin : dq_virtex5_insts
          for ( i_dq = 0; i_dq < RL_DQ_WIDTH; i_dq = i_dq + 1)  begin: dq_bit_insts
+				if (i_dq % 18 != 16)
+				if (i_dq % 18 != 17)
             rld_v5_dq_iob  dq  (
                .clk270          ( clk270 ),
                .bufio_clk       ( qk_bufio[(i_dq/QK_DATA_WIDTH)] ),
@@ -264,6 +266,7 @@
                .read_data_rise  ( rd_data_rise[i_dq] ),
                .read_data_fall  ( rd_data_fall[i_dq] )
             );
+
          end
       end
    endgenerate
diff -u ./rld_data_path.v xilinx/rld_data_path.v
--- ./rld_data_path.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_data_path.v	2014-01-22 18:14:11.351075668 +0000
@@ -111,10 +111,7 @@
    read_data_rise,
    read_data_fall,
 
-   idelay_ctrl_rdy,
-
-   // chipscope debug ports
-   cs_io
+   idelay_ctrl_rdy
 );
 
 // public parameters -- adjustable
@@ -190,8 +187,6 @@
 
    output                        idelay_ctrl_rdy;
 
-   inout [1023:0]   cs_io;
-
    reg  [NUM_OF_DEVS-1:0]    read_enable_rise_r;
 
    reg                       SEL_DONE, SEL_DONE_a1, SEL_DONE_a2;
@@ -441,9 +436,7 @@
       .idelay_ctrl_rdy_r1   ( idelay_ctrl_rdy ),
    
       .rd_data_rise         ( rd_data_rise ),
-      .rd_data_fall         ( rd_data_fall ),
-   
-      .cs_io                ( cs_io )
+      .rd_data_fall         ( rd_data_fall )
    );
 
 
diff -u ./rld_dly_cal_sm.v xilinx/rld_dly_cal_sm.v
--- ./rld_dly_cal_sm.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_dly_cal_sm.v	2014-01-22 18:14:11.639077519 +0000
@@ -272,11 +272,13 @@
    // -----------------------------------------------------------------------------
    // Concatenate read data { QK_DATA_WIDTH-bit RISE : QK_DATA_WIDTH-bit FALL } before comparing with patterns
    // -----------------------------------------------------------------------------
-   assign rd_data = {rd_data_rise, rd_data_fall};  // read data
+   assign rd_data = {2'b0,rd_data_rise[15:0], 2'b0,rd_data_fall[15:0]};  // read data
    
    //Concatonate the Data for checking
-   assign first_check_data  = { {QK_DATA_WIDTH/9{data1}}, {QK_DATA_WIDTH/9{data2}} };
-   assign second_check_data = { {QK_DATA_WIDTH/9{data3}}, {QK_DATA_WIDTH/9{data4}} };
+   //assign first_check_data  = { {QK_DATA_WIDTH/9{data1}}, {QK_DATA_WIDTH/9{data2}} };
+   //assign second_check_data = { {QK_DATA_WIDTH/9{data3}}, {QK_DATA_WIDTH/9{data4}} };
+   assign first_check_data  = {2'b0,data1[6:0],data1, 2'b0,data2[6:0],data2};
+   assign second_check_data = {2'b0,data3[6:0],data3, 2'b0,data4[6:0],data4};
                            
    // -----------------------------------------------------------------------------
    // Test Signals used for debugging
diff -u ./rld_infrastructure_top.v xilinx/rld_infrastructure_top.v
--- ./rld_infrastructure_top.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_infrastructure_top.v	2014-01-22 18:14:11.647077571 +0000
@@ -60,10 +60,8 @@
 `timescale 1ns/100ps
 
 module  rld_infrastructure_top  (
-   sysClk_p,
-   sysClk_n,
-   refClk_p,
-   refClk_n,
+   sysClk_in,
+   refClk_in,
    sysReset,  // system reset input, acive low, asynchronous
 
    confMReg,
@@ -75,6 +73,7 @@
    clk90,
    refClk,
    clk33,
+   Clk90_in,
    dcmlocked,
 
    sync_system_reset,  // system reset, synchronized to clk
@@ -110,12 +109,11 @@
 parameter CAPTURE_METHOD = 2'b00;    // Direct Clocking=2'b00  SerDes=2'b01
 // end of parameter definitions
 
-   input                     sysClk_p;
-   input                     sysClk_n;
-   input                     refClk_p;
-   input                     refClk_n;
+   input                     sysClk_in;
+   input                     refClk_in;
    input                     sysReset; 
    input                     clk33;
+   input                     Clk90_in;
 
    input  [17:0]             confMReg;
    input                     issueMRS;
@@ -145,15 +143,18 @@
 
    // wires
    wire   sync_system_reset;
-   wire   clk;
-   wire   clk90;
+   wire   clk = sysClk_in;
+   wire   clk90 = Clk90_in;
    wire   clk180;
    wire   clk270;
-   wire   dcmlocked;
+   wire   dcmlocked = sysReset;
 
 
    assign clk180 = ~clk;
-   assign clk270 = ~clk90;
+   assign clk270 = ~Clk90_in;
+
+   wire  sysClk = sysClk_in;
+   wire  refClk = sysClk_in;
 
 
    // -----------------------------------------------------------------------------
@@ -161,29 +162,27 @@
    //    - instantiates DCM_BASE primitive for memory interface
    //    - handles 200 MHz clock for the IDELAYCTRL module
    // -----------------------------------------------------------------------------
-   rld_clk_module  #(
-      .RL_DQ_WIDTH    ( RL_DQ_WIDTH ),
-      .DEV_DQ_WIDTH   ( DEV_DQ_WIDTH ),
-      .DEV_AD_WIDTH   ( DEV_AD_WIDTH ),
-      .DEV_BA_WIDTH   ( DEV_BA_WIDTH ),
-      .DUPLICATE_CONTROLS ( DUPLICATE_CONTROLS ),
-      .RL_IO_TYPE     ( RL_IO_TYPE ),
-      .DEVICE_ARCH    ( DEVICE_ARCH ),
-      .CAPTURE_METHOD ( CAPTURE_METHOD )
-   )
-   clk_module0  (
-      .sysClk_p  ( sysClk_p ),   // differential system clock input
-      .sysClk_n  ( sysClk_n ),
-      .refClk_p  ( refClk_p ),   // differential reference clock input
-      .refClk_n  ( refClk_n ),
-      .clk33     ( clk33 ),
-      .sysReset  ( ~sysReset ),
-      .clk       ( clk ),        // Global clock to all modules, output from DCM
-      .clk90     ( clk90 ),
-      .sysClk    ( sysClk ),     // differential clock output, before the DCM
-      .refClk    ( refClk ),     // differential clock output, with BUFG
-      .locked    ( dcmlocked )
-   );
+//   rld_clk_module  #(
+//      .RL_DQ_WIDTH    ( RL_DQ_WIDTH ),
+//      .DEV_DQ_WIDTH   ( DEV_DQ_WIDTH ),
+//      .DEV_AD_WIDTH   ( DEV_AD_WIDTH ),
+//      .DEV_BA_WIDTH   ( DEV_BA_WIDTH ),
+//      .DUPLICATE_CONTROLS ( DUPLICATE_CONTROLS ),
+//      .RL_IO_TYPE     ( RL_IO_TYPE ),
+//      .DEVICE_ARCH    ( DEVICE_ARCH ),
+//      .CAPTURE_METHOD ( CAPTURE_METHOD )
+//   )
+//   clk_module0  (
+//      .sysClk_in  ( sysClk_in ),
+//      .refClk_in  ( refClk_in ),
+//      .clk33     ( clk33 ),
+//      .sysReset  ( ~sysReset ),
+//      .clk       ( clk ),        // Global clock to all modules, output from DCM
+//      .clk90     ( clk90 ),
+//      .sysClk    ( sysClk ),     // differential clock output, before the DCM
+//      .refClk    ( refClk ),     // differential clock output, with BUFG
+//      .locked    ( dcmlocked )
+//   );
 
 
    // -----------------------------------------------------------------------------
diff -u ./rld_iobs.v xilinx/rld_iobs.v
--- ./verilog/rld_iobs.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_iobs.v	2014-01-22 18:14:11.639077519 +0000
@@ -112,10 +112,7 @@
    ctlBa,
 
    read_enable_rise,
-   read_enable_fall,
-
-   // chipscope debug ports
-   cs_io
+   read_enable_fall
 );
 
 // parameter definitions
@@ -182,9 +179,6 @@
    output [NUM_OF_DEVS-1:0]    read_enable_rise;
    output [NUM_OF_DEVS-1:0]    read_enable_fall;
 
-
-   inout  [1023:0]             cs_io;
-
    wire   clk180;
    wire   clk270;
 
@@ -224,9 +218,7 @@
 
       .ctl_Cmd       ( ctlCmd ),
       .ctl_Ad        ( ctlAd ),
-      .ctl_Ba        ( ctlBa ),
-
-      .cs_io         ( cs_io )
+      .ctl_Ba        ( ctlBa )
    );
 
 
diff -u ./rld_main.v xilinx/rld_main.v
--- ./rld_main.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_main.v	2014-01-22 18:14:11.883079090 +0000
@@ -65,7 +65,7 @@
 //       keep falling edge levels of QK to prevent Q2 output of IDDR from being
 //       trimmed, otherwise map 6.3.03 will crash. This has been fixed in 7.1i.
 //
-// apAddr[25:0]        input    
+//     apAddr[25:0]        input    
 //     apAddr[25]    - user refresh
 //     apAddr[24]    - R/~W  Reads and writes will be determined by bit 24 of 
 //                     the "apAddr" bus
@@ -117,8 +117,20 @@
    rld2_dq,
    rld2_qvld,
 
-   // chipscope debug ports
-   cs_io
+	//Axi bus interface
+	axi_addr,
+	axi_en,
+	axi_wr,
+	axi_wr_data,
+
+	axi_rd,
+	axi_rd_data,
+
+   rlWdfFull,
+   rlWdfEmpty,
+   rlafFull,
+   rlafEmpty,
+   rlRdfEmpty  
 );
 
 // public parameters -- adjustable
@@ -189,7 +201,19 @@
    inout  [RL_DQ_WIDTH-1:0]    rld2_dq;
    input  [NUM_OF_DEVS-1:0]    rld2_qvld;
 
-   inout  [1023:0]             cs_io;
+	input		[25:0]					axi_addr;
+	input									axi_en;
+	input									axi_wr;
+	input		[143:0]					axi_wr_data;
+
+	output								axi_rd;
+	output	[143:0]					axi_rd_data;
+
+   output                        rlWdfFull;
+   output                        rlWdfEmpty;
+   output                        rlafFull;
+   output                        rlafEmpty;
+   output                        rlRdfEmpty;
 
    wire                        clk;
    wire                        clk90;
@@ -221,6 +245,10 @@
 
    wire  [(2*RL_DQ_WIDTH)-1:0] rldReadData;
    wire                        rldReadDataValid;
+
+   wire  [(2*RL_DQ_WIDTH)-1:0] axi_rd_data = rldReadData;
+   wire                        axi_rd = rldReadDataValid;
+
    wire  [APP_AD_WIDTH-1:0]    apAddr;
    wire  [(2*RL_DQ_WIDTH)-1:0] apWriteData;
    wire  [(2*NUM_OF_DEVS)-1:0] apWriteDM;
@@ -308,11 +336,17 @@
       .rldReadData      ( rldReadData ),
       .rldReadDataValid ( rldReadDataValid ),
    
-      .apAddr           ( apAddr ),
-      .apValid          ( apValid ),
-      .apWriteDM        ( apWriteDM ),
-      .apWriteData      ( apWriteData ),
-      .apWriteDValid    ( apWriteDValid ),
+      //.apAddr           ( apAddr ),
+      //.apValid          ( apValid ),
+      .apWriteDM        ( {(2*NUM_OF_DEVS)-1{1'b0}} ), // apWriteDM ),
+      //.apWriteData      ( apWriteData ),
+      //.apWriteDValid    ( apWriteDValid ),
+
+      .apAddr           ( axi_addr ),
+      .apValid          ( axi_en ),
+      .apWriteData      ( axi_wr_data ),
+      .apWriteDValid    ( axi_wr ),
+
       .apConfA          ( apConfA ),
       .apConfWrD        ( apConfWrD ),
       .apConfWr         ( apConfWr ),
@@ -331,10 +365,8 @@
 
       .Init_Done        ( Init_Done ),
       .issueMRS         ( issueMRS ),
-      .confMReg         ( confMReg ),
-   
-      .cs_io            ( cs_io )
-   );
+      .confMReg         ( confMReg )
+);
 
 
    // -----------------------------------------------------------------------------
@@ -399,9 +431,7 @@
       .DISPLAY            (),
       .error_count_BCD    (),
    
-      .PASS_FAIL          ( PASS_FAIL ),
-
-      .cs_io              ( cs_io )
-   );
+      .PASS_FAIL          ( PASS_FAIL )
+);
 
 endmodule
diff -u ./rld_mem_interface_top.v xilinx/rld_mem_interface_top.v
--- ./verilog/rld_mem_interface_top.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_mem_interface_top.v	2014-01-22 18:14:11.891079142 +0000
@@ -65,13 +65,12 @@
 `timescale 1ns/100ps
 
 module  rld_mem_interface_top  (
-   refClk_p,
-   refClk_n,
-   sysClk_p,
-   sysClk_n,
+   refClk_in,
+   sysClk_in,
    sysReset,
    dip,
    clk33,
+   Clk90_in,
 
    FPGA3_7SEG,
    DBG_LED,
@@ -91,16 +90,32 @@
    RLD2_REF_N,
    RLD2_DM,
    RLD2_DQ,
-   RLD2_QVLD
+   RLD2_QVLD,
 
    // PASS_FAIL
+
+	//Axi bus interface
+	axi_addr,
+	axi_en,
+	axi_wr,
+	axi_wr_data,
+
+	axi_rd,
+	axi_rd_data,
+   Init_Done,
+
+   rlWdfFull,
+   rlWdfEmpty,
+   rlafFull,
+   rlafEmpty,
+   rlRdfEmpty
 );
 
 // public parameters -- adjustable
 parameter SIMULATION_ONLY = 1'b0;  // if set (1'b1), it shortens the wait time
 //
-parameter RL_DQ_WIDTH     = 36;
-parameter DEV_DQ_WIDTH    = 18;  // data width of the memory device
+parameter RL_DQ_WIDTH     = 72;
+parameter DEV_DQ_WIDTH    = 36;  // data width of the memory device
 parameter NUM_OF_DEVS     = RL_DQ_WIDTH/DEV_DQ_WIDTH;  // number of memory devices
 parameter NUM_OF_DKS      = (DEV_DQ_WIDTH == 36) ? 2*NUM_OF_DEVS : NUM_OF_DEVS;
 parameter DEV_AD_WIDTH    = 20;  // address width of the memory device
@@ -112,7 +127,7 @@
 // MRS (Mode Register Set command) parameters   
 //    please check Micron RLDRAM-II datasheet for definitions of these parameters
 parameter RL_MRS_CONF            = 3'b011; // 3'b001: mode1;  3'b010: mode2;  3'b011: mode3
-parameter RL_MRS_BURST_LENGTH    = 2'b01;  // 2'b00: BL2;  2'b01: BL4;  2'b10: BL8 (BL8 unsupported)
+parameter RL_MRS_BURST_LENGTH    = 2'b00;  // 2'b00: BL2;  2'b01: BL4;  2'b10: BL8 (BL8 unsupported)
 parameter RL_MRS_ADDR_MUX        = 1'b0;   // 1'b0: non-muxed addr;  1'b1: muxed addr
 parameter RL_MRS_DLL_RESET       = 1'b1;   // 1'b0: Memory DLL reset; 1'b1: Memory DLL enabled
 parameter RL_MRS_IMPEDANCE_MATCH = 1'b1;   // 1'b0: internal 50ohms output buffer impedance, 1'b1: external 
@@ -126,13 +141,12 @@
 // end of public parameters
 
    // System signals and debug
-   input            refClk_p;
-   input            refClk_n;
-   input            sysClk_p;
-   input            sysClk_n;
+   input            refClk_in;
+   input            sysClk_in;
    input            sysReset;
    input            dip;
    input            clk33;
+   input            Clk90_in;
 
    output [7:0]     FPGA3_7SEG;
    output [3:0]     DBG_LED;
@@ -156,6 +170,21 @@
 
    // output [2:0]     PASS_FAIL;
 
+	input		[25:0]					axi_addr;
+	input									axi_en;
+	input									axi_wr;
+	input		[143:0]					axi_wr_data;
+
+	output								axi_rd;
+	output		[143:0]				axi_rd_data;
+   output                        Init_Done;
+
+   output                        rlWdfFull;
+   output                        rlWdfEmpty;
+   output                        rlafFull;
+   output                        rlafEmpty;
+   output                        rlRdfEmpty;
+
    // wires 
    wire           clk;
    wire           clk90;
@@ -185,12 +214,6 @@
    wire           cs_clk0;
    wire [255:0]   cs_data0;
    wire [15:0]    cs_trig0;
-   wire [1023:0]  cs_io;
-
-
-   // assign debug signals to test header on ML561
-   assign FPGA3_TEST_HDR = { DBG_LED[3], PASS_FAIL[2], dcmLocked, Init_Done,
-                             dip, rstHard, refClk, clk };
 
    // -----------------------------------------------------------------------------
    // rld_infrastructure_top
@@ -209,12 +232,11 @@
       .CAPTURE_METHOD     ( CAPTURE_METHOD )
    )
    infrastructure_top0  (
-      .sysClk_p          ( sysClk_p ),
-      .sysClk_n          ( sysClk_n ),
-      .refClk_p          ( refClk_p ),
-      .refClk_n          ( refClk_n ),
+      .sysClk_in         ( sysClk_in ),
+      .refClk_in         ( refClk_in ),
       .sysReset          ( sysReset ),     // system reset input, acive low, asynchronous
       .clk33             ( clk33 ),
+      .Clk90_in         ( Clk90_in),
 
       .confMReg          ( confMReg ),
       .issueMRS          ( issueMRS ),
@@ -305,90 +327,20 @@
       .rld2_dm           ( RLD2_DM ),
       .rld2_dq           ( RLD2_DQ ),
       .rld2_qvld         ( RLD2_QVLD ),
-   
-      .cs_io             ( cs_io )
-   );
-
-
-   // -----------------------------------------------------------------------------
-   // rld_seven_seg
-   //   - module used to control ML561 LEDs
-   //   - useful for debug/demo	
-   // -----------------------------------------------------------------------------
-   rld_seven_seg  seven_seg0  (
-      .clk            ( clk ),
-      .rst_n          ( ~sync_system_reset ),
-   
-      .init_done      ( Init_Done ),
-      .valid          ( cs_io[90] ),
-      .PASS_FAIL      ( PASS_FAIL ),
-   
-      .seven_seg_n    ( FPGA3_7SEG[6:0] ),
-      .seven_seg_dp_n ( FPGA3_7SEG[7] ),
-      .LED            ( DBG_LED ),
-   
-      .cs_io          ( cs_io ),
-      .dip            ( dip )
-   ); 
-
-
-   // -----------------------------------------------------------------------------
-   // Chipscope module instantiations
-   // -----------------------------------------------------------------------------
-   /*icon  i_icon  (
-      .control0  ( cs_control0 )
-   );
-
-   ila256  i_ila0  (
-      .control ( cs_control0 ),
-      .clk     ( cs_clk0 ),
-      .data    ( cs_data0 ),
-      .trig0   ( cs_trig0 )
-   ); */
-
-   assign cs_clk0  = clk;
-   //assign cs_clk0  = ~clk90; //use clk270 for checking phy signals
-   assign cs_data0 = { cs_io[255:0] };
-   
-
-   assign cs_trig0 = { 10'b0,
-                       PASS_FAIL[2],    //Error Signal
-                       cs_io[111:100],  // f_cs, data cal SM for debug
-                       cs_io[95:93]     // ref[2], we[1], cs[0]
-                      };
-
-endmodule
-
 
-
-// -----------------------------------------------------------------------------
-// Define "icon" module for Chipscope
-// -----------------------------------------------------------------------------
-module  icon  (
-   control0
+	.axi_addr		(	axi_addr	),
+	.axi_en			(	axi_en	),
+	.axi_wr			(	axi_wr	),
+	.axi_wr_data		(	axi_wr_data	),
+
+	.axi_rd				(	axi_rd		),
+	.axi_rd_data		(	axi_rd_data	),
+
+   .rlWdfFull		(	rlWdfFull 		),
+   .rlWdfEmpty		(	rlWdfEmpty		),
+   .rlafFull		(	rlafFull  		),
+   .rlafEmpty		(	rlafEmpty 		),
+   .rlRdfEmpty    (  rlRdfEmpty     )  
 );
 
-   output [35:0]  control0;
-
 endmodule
-
-
-
-// -----------------------------------------------------------------------------
-// Define "ila256" module for Chipscope
-// -----------------------------------------------------------------------------
-module  ila256  (
-   control,
-   clk,
-   data,
-   trig0
-);
-
-   input  [35:0]  control;
-   input          clk;
-   input  [255:0] data;
-   input  [15:0]  trig0;
-
-endmodule
-
-
diff -u ./rld_phy_calib.v xilinx/rld_phy_calib.v
--- ./rld_phy_calib.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_phy_calib.v	2014-01-22 18:14:11.791078497 +0000
@@ -129,9 +129,7 @@
    output reg [APP_AD_WIDTH-1:0]  apAddr,         // address to be written to write address fifo
    output reg                     apWriteDValid,  // write enable to write data fifo
    output reg [2*RL_DQ_WIDTH-1:0] apWriteData,    // data to be written to write data fifo
-   output reg [2*NUM_OF_DEVS-1:0] apWriteDM,      // data mask to be written to write data fifo
-   
-   inout  [1023:0] cs_io  // chipscope debug ports
+   output reg [2*NUM_OF_DEVS-1:0] apWriteDM      // data mask to be written to write data fifo
 );
 
 // private parameters -- do not change
Only in xilinx/: rldram2_parameters.vh
Only in xilinx/: rldram2.v
diff -u ./rld_tap_logic.v xilinx/rld_tap_logic.v
--- ./rld_tap_logic.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_tap_logic.v	2014-01-22 18:14:11.647077571 +0000
@@ -104,10 +104,7 @@
    idelay_ctrl_rdy_r1,
 
    rd_data_rise,
-   rd_data_fall,
-
-   // chipscope debug ports
-   cs_io
+   rd_data_fall
 );
 
 // public parameters -- adjustable
@@ -170,8 +167,6 @@
    input  [RL_DQ_WIDTH-1:0]    rd_data_rise;
    input  [RL_DQ_WIDTH-1:0]    rd_data_fall;
 
-   inout  [1023:0]   cs_io;
-   
    reg [NUM_OF_DEVS-1:0] delay_start_r1;
    reg           delay_start;
    
diff -u ./rld_top.v xilinx/rld_top.v
--- ./rld_top.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_top.v	2014-01-22 18:14:11.871079011 +0000
@@ -127,10 +127,7 @@
 
    Init_Done,
    issueMRS,
-   confMReg,
-
-   // chipscope debug ports
-   cs_io
+   confMReg
 );
 
 // public parameters -- adjustable
@@ -225,10 +222,6 @@
    input                         issueMRS;
    output [17:0]                 confMReg;
 
-   // chipscope debug ports
-   inout  [1023:0]               cs_io;
-
-
    // wires
    wire                       clk;
    wire                       rstHard;
@@ -455,10 +448,8 @@
       .rlWdfWrCount     ( rlWdfWrCount ),    // write data FIFO (wdfifo) write count
       .rlWdfWordCount   ( rlWdfWordCount ),  // write data FIFO (wdfifo) word count
       .rlafWrCount      ( rlafWrCount ),     // command/address FIFO (rafifo) write count
-      .rlafWordCount    ( rlafWordCount ),    // command/address FIFO (rafifo) word count
-      
-      .cs_io            ( cs_io )
-   );
+      .rlafWordCount    ( rlafWordCount )    // command/address FIFO (rafifo) word count
+);
 
 
    // -----------------------------------------------------------------------------
@@ -527,9 +518,7 @@
       .read_data_rise       ( dpRdData_rise ),
       .read_data_fall       ( dpRdData_fall ),
 
-      .idelay_ctrl_rdy      ( idelay_ctrl_rdy ),
-
-      .cs_io                ( cs_io )
+      .idelay_ctrl_rdy      ( idelay_ctrl_rdy )
    );
 
 
@@ -601,10 +590,8 @@
       .ctlBa            ( ctlBa ),
 
       .read_enable_rise ( read_enable_rise ),
-      .read_enable_fall ( read_enable_fall ),
-
-      .cs_io            ( cs_io )
-   );
+      .read_enable_fall ( read_enable_fall )
+);
 
 
    // -----------------------------------------------------------------------------
@@ -664,10 +651,8 @@
       .apConfWr      ( apConfWr ),
       .apConfA       ( apConfA ),
       .confMReg      ( confMReg ),
-      .confBL        ( confBL ),
-      
-      .cs_io         ( cs_io )
-   );
+      .confBL        ( confBL )
+);
 
 
    // -----------------------------------------------------------------------------
@@ -721,9 +706,7 @@
       .apAddr           ( apAddr_dummy ),
       .apWriteDValid    ( apWriteDValid_dummy ),
       .apWriteData      ( apWriteData_dummy ),
-      .apWriteDM        ( apWriteDM_dummy ),
-      
-      .cs_io            ( cs_io )
-   );
+      .apWriteDM        ( apWriteDM_dummy )
+);
 
 endmodule
diff -u ./rld_user_interface.v xilinx/rld_user_interface.v
--- ./rld_user_interface.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_user_interface.v	2014-01-22 18:14:11.651077598 +0000
@@ -105,10 +105,7 @@
    rlWdfWrCount,
    rlWdfWordCount,
    rlafWrCount,
-   rlafWordCount,
-   
-   // chipscope debug ports
-   cs_io
+   rlafWordCount
 );
 
 // public parameters -- adjustable
@@ -174,8 +171,6 @@
    wire   [12:0]                 rlafRdCount;    // command/address FIFO (rafifo) read count
    output [12:0]                 rlafWordCount;  // command/address FIFO (rafifo) word count
    
-   inout [1023:0] cs_io;
-
    reg [5:0] wren_RdFifo_r;
    reg                        rldReadDataValid;
    //reg                        rlRdfEmpty;
diff -u ./rld_v4_qvld_iob.v xilinx/rld_v4_qvld_iob.v
--- ./rld_v4_qvld_iob.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_v4_qvld_iob.v	2014-01-22 18:14:11.651077598 +0000
@@ -193,7 +193,7 @@
       .DLYINC    ( dlyinc ),
       .DLYRST    ( dlyrst ),
       .OCLK      ( clk270 ),     // high speed clock for memory apps, drive the serial-to-parallel converter
-      .REV       ( gnd ),
+      //.REV       ( gnd ),
       .SHIFTIN1  ( ),
       .SHIFTIN2  ( ),
       .SR        ( reset )
diff -u ./rld_v5_dq_iob.v xilinx/rld_v5_dq_iob.v
--- ./rld_v5_dq_iob.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/rld_v5_dq_iob.v	2014-01-22 18:14:11.359075719 +0000
@@ -167,7 +167,7 @@
       .DLYINC    ( dlyinc ),
       .DLYRST    ( dlyrst ),
       .OCLK      ( clk270 ),     // high speed clock for memory apps, drive the serial-to-parallel converter
-      .REV       ( gnd ),
+      //.REV       ( gnd ),
       .SHIFTIN1  ( ),
       .SHIFTIN2  ( ),
       .SR        ( reset )
diff -u ./test_bench.v xilinx/test_bench.v
--- ./test_bench.v	2007-08-24 17:21:06.000000000 +0100
+++ xilinx/test_bench.v	2014-01-22 18:14:11.347075644 +0000
@@ -98,10 +98,7 @@
    issueMRS,
    issueCalibration,
    
-   PASS_FAIL,
-   
-   // chipscope debug ports
-   cs_io
+   PASS_FAIL
 );
 
 // parameter definitions
@@ -158,8 +155,6 @@
    
    output [2:0] PASS_FAIL;
    
-   inout [1023:0] cs_io;
-
    reg [2:0]     state;
    reg [2:0]     burst_count;
    reg [2:0]     temp_count;
@@ -444,9 +439,9 @@
 
 
 
-   cmp_rd_data #(
-      .RL_DQ_WIDTH (RL_DQ_WIDTH)
-   ) 
+   cmp_rd_data #(
+      .RL_DQ_WIDTH (RL_DQ_WIDTH)
+   ) 
    cmp_rd_data0  (
       .CLK                ( CLK ),                      // data read from memory is in clkGlob domain
       .RESET              ( RESET ),
@@ -456,9 +451,7 @@
       .DISPLAY            ( DISPLAY ),
       .enable_error_counter  ( enable_error_counter ),
       
-      .PASS_FAIL          ( PASS_FAIL ),
-      
-      .cs_io              ( cs_io )
+      .PASS_FAIL          ( PASS_FAIL )
    );
 
 
@@ -481,9 +474,7 @@
       .app_compare_data ( app_cmp_data_tmp ),
       .app_Wdf_WrEn     ( APP_WDF_WREN ),
       .app_Raf_addr     ( APP_RAF_ADDR ),
-      .app_Raf_WrEn     ( APP_RAF_WREN ),
-      
-      .cs_io              ( cs_io )
+      .app_Raf_WrEn     ( APP_RAF_WREN )
    );
 
 assign APP_WDF_DATA = APP_WDF_DATA_tmp;
@@ -500,4 +491,7 @@
 );
 
 
-endmodule
\ No newline at end of file
+
+
+
+endmodule
